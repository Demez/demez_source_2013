// ---------------------------------------------------------------
// Auto Generated QPC Script - Fix if needed before using
// ---------------------------------------------------------------
include "$SRC_DIR/_qpc_scripts/version.qpc"

macro NOFPO "1"
macro SRC_DIR
macro OUT_BIN_NAME "$PROJECTNAME"
macro OUT_BIN_DIR
macro BINDEFAULT "$SRC_DIR/../game/bin/$PLATFORM"
macro LIBPUBLIC "$SRC_DIR/lib/public/$PLATFORM"
macro LIBCOMMON "$SRC_DIR/lib/common/$PLATFORM"
macro PLATSUBDIR
macro OUTDLLEXT
macro GAMENAME
macro INTERMEDIATESUBDIR
macro _UNITYSUBDIR
macro _SUBDIRSUFFIX "$INTERMEDIATESUBDIR$PLATFORM/$GAMENAME$_UNITYSUBDIR"

include "$SRC_DIR/_qpc_scripts/loadaddress.qpc"
include "$SRC_DIR/_qpc_scripts/source_win_base.qpc"

configuration
{
	general
	{
		out_dir "./$CONFIG/$_SUBDIRSUFFIX" [$WIN32]
		out_dir "./Retail/$_SUBDIRSUFFIX" [$RETAIL && $WIN32 && $RELEASE]
		out_dir "./Profile/$_SUBDIRSUFFIX" [!$RETAIL && $PROFILE && $WIN32 && $RELEASE]
		out_dir "./$CONFIG/x64" [$WIN64]
		int_dir "./$CONFIG/$_SUBDIRSUFFIX" [$WIN32]
		int_dir "./Retail/$_SUBDIRSUFFIX" [$RETAIL && $WIN32 && $RELEASE]
		int_dir "./Profile/$_SUBDIRSUFFIX" [!$RETAIL && $PROFILE && $WIN32 && $RELEASE]
		int_dir "./$CONFIG/x64" [$WIN64]
		configuration_type "dynamic_library" [$WINDOWS]
		language "cpp" [$WINDOWS]

		include_directories
		{
			"$SRC_DIR/common" "$SRC_DIR/public" "$SRC_DIR/public/tier0" "$SRC_DIR/public/tier1" [$WINDOWS]
		}

		library_directories
		{
			"$LIBCOMMON" "$LIBPUBLIC" [$WIN32]
			"$SRC_DIR/lib/common" "$SRC_DIR/lib/public" [$WIN64]
		}

		options
		{
			"/ltcg" [$LTCG && $WIN32 && $RELEASE]
		}
	}

	compiler
	{
		preprocessor_definitions
		{
			"COMPILER_MSVC32" "WIN32" "_WIN32" "_ALLOW_RUNTIME_LIBRARY_MISMATCH" "_ALLOW_ITERATOR_DEBUG_LEVEL_MISMATCH" "_ALLOW_MSC_VER_MISMATCH" "%(PreprocessorDefinitions)" [$WIN32]
			"COMPILER_MSVC" "_DLL_EXT=$_DLL_EXT" "DLLNAME=$OUT_BIN_NAME" [$WINDOWS]
			"MBCS" "_WINDOWS" "_USRDLL" "_CRT_SECURE_NO_DEPRECATE" "_CRT_NONSTDC_NO_DEPRECATE" [$WINDOWS]
			"_HAS_ITERATOR_DEBUGGING=0" [$WIN32 && $DEBUG]
			"_DEBUG" "DEBUG" [$WINDOWS && $DEBUG]
			"NDEBUG" [$WINDOWS && $RELEASE]
			"RELEASEASSERTS" [$RELEASEASSERTS && $WIN32 && $RELEASE]
			"PLATFORM_64BITS" "COMPILER_MSVC64" [$WIN64 && $WIN64]
			"WIN64" "_WIN64" [$WIN64 && $WIN64 && $WIN64]
		}

		precompiled_header "none" [$WINDOWS]

		options
		{
			"/arch:SSE" [$WINDOWS && $WINDOWS]
			"/ZI" [$WIN32 && $DEBUG]
			"/Zi" [$WINDOWS && $DEBUG]
			"/W4" "/GF" "/fp:fast" "/Zc:forScope" "/GR" "/errorReport:prompt" [$WINDOWS]
			"/Od" "/MTd" [$WINDOWS && $DEBUG]
			"/Zm200" [$WIN32]
			"/O2" "/Ob2" "/Oi" "/Ot" "/MT" "/Gy" [$WINDOWS && $RELEASE]
			"/d2Zi+" [$WIN32 && $RELEASE]
			"/Oy-" [$NOFPO && $WIN32 && $RELEASE]
			"/Wp64" [$WIN64]
			"/RTC1" [$WIN64 && $DEBUG]
		}
	}

	linker
	{
		output_file "$(OutDir)/$OUT_BIN_NAME$OUTDLLEXT" [$WIN32]
		output_file "$(OutDir)/$OUT_BIN_NAME" [$WIN64]
		debug_file "$(IntDir)/$(TargetName)" [$WINDOWS]

		libraries
		{
			"shell32.lib" "user32.lib" "advapi32.lib" "gdi32.lib" "comdlg32.lib" "ole32.lib" [$WINDOWS]
			"$LIBPUBLIC/tier0"
			"$LIBPUBLIC/tier1"
			"$LIBPUBLIC/vstdlib"
		}

		ignore_libraries
		{
			"libc" "libcd" [$WINDOWS]
			"libcmt" [$WINDOWS && $DEBUG]
			"libcmtd" [$WINDOWS && $RELEASE]
		}

		options
		{
			"/MACHINE:X86" [$WIN32]
			"/ignore:4221" [$WINDOWS]
			"/NOLOGO" "/DEBUG" "/SUBSYSTEM:WINDOWS" "/ERRORREPORT:PROMPT" [$WINDOWS]
			"/INCREMENTAL:NO" [$WINDOWS && $RELEASE]
			"/OPT:ICF" [$RETAIL && $WINDOWS && $RELEASE]
			"/OPT:NOICF" [!$RETAIL && $WIN32 && $RELEASE]
			"/MACHINE:X64" [$WIN64 && $WIN64 && $WIN64]
			"/MAP" [$WIN64]
		}
	}

	post_build
	{
		command_line
		{
			"echo set the command_line option manually"
		}

		use_in_build "True" [$WINDOWS && $WINDOWS && !$ANALYZE]
	}
}

files
{
	folder "Source Files"
	{
		"$SRC_DIR/public/tier0/memoverride.cpp"
		{
			configuration
			{
				compiler
				{
					precompiled_header "none"
				}
			}
		}

		"$SRC_DIR/common/debug_dll_check.cpp" [!$SOURCESDK]
		{
			configuration
			{
				compiler
				{
					precompiled_header "none"
				}
			}
		}
	}
}
